# Docker Compose para PsychoManager

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:18.0-alpine
    container_name: psycho-postgres
    environment:
      POSTGRES_DB: psycho_manager
      POSTGRES_USER: psycho_manager
      POSTGRES_PASSWORD: psycho_manager
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - psycho-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U psycho_manager -d psycho_manager"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Quarkus
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: psycho-backend
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/psycho_manager
      QUARKUS_DATASOURCE_USERNAME: psycho_manager
      QUARKUS_DATASOURCE_PASSWORD: psycho_manager
      QUARKUS_HTTP_CORS_ORIGINS: http://localhost:3000,http://frontend:80
      QUARKUS_HTTP_CORS_HEADERS: accept,authorization,content-type,x-requested-with
      QUARKUS_HTTP_CORS_METHODS: GET,POST,PUT,DELETE,OPTIONS
      PSYCHO_MANAGER_PDF_PATH: /app/uploads/pdfs
      PSYCHO_MANAGER_TIMEZONE: America/Sao_Paulo
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "8080:8080"
    networks:
      - psycho-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/q/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: psycho-frontend
    ports:
      - "3000:80"
    networks:
      - psycho-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Proxy Reverso - Opcional)
  nginx:
    image: nginx:alpine
    container_name: psycho-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - psycho-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  psycho-network:
    driver: bridge
